syntax = "proto3";
package sports;

option go_package = "/sports";

import "google/protobuf/timestamp.proto";

service Sports {
  // ListEvents will return a collection of all events.
  rpc ListEvents(ListEventsRequest) returns (ListEventsResponse) {}
}

/* Requests/Responses */

// Request for ListEvents call.
message ListEventsRequest {
  ListEventsRequestFilter filter = 1;
  ListEventsRequestOrderBy order_by = 2;
}

// Response to ListEvents call.
message ListEventsResponse {
  repeated Event events = 1;
}

// Filter for listing events.
message ListEventsRequestFilter {
  bool visible_only = 1;
}

// Sorting for listing events.
message ListEventsRequestOrderBy {
  string property = 1;
  bool asc = 2;
}

/* Resources */

// A event resource.
message Event {
  // ID represents a unique identifier for the event.
  int64 id = 1;
  // Name is the official name given to the event.
  string name = 2;
  // Address is the place where the event is held.
  string address = 3;
  // Visible represents whether or not the event is visible.
  bool visible = 4;
  // AdvertisedStartTime is the time the event is advertised to run.
  google.protobuf.Timestamp advertised_start_time = 5;
  // Status represents whether or not the event is open
  Status status = 6;
}

enum Status{
  CLOSED = 0;
  OPEN = 1;
}

